name: Go Backend CI/CD

on:
  workflow_dispatch: # Allows manual trigger from GitHub UI
  push:
    branches:
      - main # Triggers on push to the main branch

env:
  REGISTRY: ghcr.io # GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }} # e.g., 'your-org/your-repo' or 'your-user/your-repo'
  # Define the path to your Dockerfile if it's not in the root
  DOCKERFILE_PATH: ./docker/Dockerfile # <-- ADJUST THIS IF YOUR DOCKERFILE IS ELSEWHERE

jobs:
  build:
    name: Compile, Test, Build & Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: write # For pushing tags (by github-tag-action)
      packages: write # For pushing Docker images to GHCR
      # No need for write-all, least privilege is better

    steps:
      - name: Git Checkout
        uses: actions/checkout@v4 # Recommended latest version
        with:
          fetch-depth: 0 # Use fetch-depth: 0 for mathieudutour/github-tag-action to work correctly
                         # as it needs the full history to calculate the new version.

      - name: Bump Version and Push Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # Use secrets.GITHUB_TOKEN, which is automatically provided
          default_bump: patch
          tag_prefix: "" # No prefix, tag will be like 1.0.0, 1.0.1 etc.

      - name: Set up Go
        uses: actions/setup-go@v5 # Recommended latest version
        with:
          go-version: '1.22' # Use a stable Go version, 1.23.4 might be a dev branch.
                            # Check Go release notes for stable versions (e.g., 1.22.x).

      - name: Go Mod Download
        run: go mod download

      - name: Go Build
        # This compiles your Go application.
        # Assuming your main package is in the root or a 'main.go' in root.
        # If your main executable is in a subfolder like 'cmd/myapp', adjust accordingly:
        # run: go build -o myapp ./cmd/myapp
        run: go build -v -o main . # Builds an executable named 'main' in the current directory

      - name: Go Test
        run: go test -v ./...

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Use secrets.GITHUB_TOKEN

      - name: Extract Docker Metadata (Tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.tag_version.outputs.new_tag }} # Use the new version tag

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .                 # The build context is the repository root
          file: ${{ env.DOCKERFILE_PATH }} # Path to your Dockerfile (e.g., ./docker/Dockerfile)
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
